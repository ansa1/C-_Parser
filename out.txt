[Keyword -> "using"] [Identifier -> "System"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Collections"] [Operator -> "."] [Identifier -> "Generic"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Linq"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Text"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Threading"] [Operator -> "."] [Identifier -> "Tasks"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "IO"] [Delimiter -> ";"] 

[Keyword -> "namespace"] [Identifier -> "Test"] 
[Delimiter -> "{"] 
[Keyword -> "class"] [Identifier -> "Program"] 
[Delimiter -> "{"] 

[Keyword -> "static"] [Keyword -> "void"] [Identifier -> "Main"] [Operator -> "("] [Keyword -> "string"] [Operator -> "[]"] [Identifier -> "args"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "string"] [Identifier -> "text"] [Operator -> "="] [Identifier -> "System"] [Operator -> "."] [Identifier -> "IO"] [Operator -> "."] [Identifier -> "File"] [Operator -> "."] [Identifier -> "ReadAllText"] [Operator -> "("] [Literal constant -> "Program.cs"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "LexicalAnalysis"] [Identifier -> "analyzer"] [Operator -> "="] [Keyword -> "new"] [Identifier -> "LexicalAnalysis"] [Operator -> "()"] [Delimiter -> ";"] 
[Keyword -> "while"] [Operator -> "("] [Identifier -> "text"] [Operator -> "!="] [Keyword -> "null"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "text"] [Operator -> "="] [Identifier -> "text"] [Operator -> "."] [Identifier -> "Trim"] [Operator -> "("] [Literal constant -> ' '] [Operator -> ","] [Literal constant -> '\t'] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "string"] [Identifier -> "token"] [Operator -> "="] [Identifier -> "analyzer"] [Operator -> "."] [Identifier -> "GetNextLexicalAtom"] [Operator -> "("] [Keyword -> "ref"] [Identifier -> "text"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "System"] [Operator -> "."] [Identifier -> "Console"] [Operator -> "."] [Identifier -> "Write"] [Operator -> "("] [Identifier -> "token"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Identifier -> "System"] [Operator -> "."] [Identifier -> "Console"] [Operator -> "."] [Identifier -> "Read"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Delimiter -> "}"] 

[Keyword -> "class"] [Identifier -> "LexicalAnalysis"] 
[Delimiter -> "{"] 
[Keyword -> "string"] [Operator -> "[]"] [Identifier -> "keywords"] [Operator -> "="] [Delimiter -> "{"] [Literal constant -> "abstract"] [Operator -> ","] [Literal constant -> "as"] [Operator -> ","] [Literal constant -> "base"] [Operator -> ","] [Literal constant -> "bool"] [Operator -> ","] [Literal constant -> "break"] [Operator -> ","] [Literal constant -> "by"] [Operator -> ","] 
[Literal constant -> "byte"] [Operator -> ","] [Literal constant -> "case"] [Operator -> ","] [Literal constant -> "catch"] [Operator -> ","] [Literal constant -> "char"] [Operator -> ","] [Literal constant -> "checked"] [Operator -> ","] [Literal constant -> "class"] [Operator -> ","] [Literal constant -> "const"] [Operator -> ","] 
[Literal constant -> "continue"] [Operator -> ","] [Literal constant -> "decimal"] [Operator -> ","] [Literal constant -> "default"] [Operator -> ","] [Literal constant -> "delegate"] [Operator -> ","] [Literal constant -> "do"] [Operator -> ","] [Literal constant -> "double"] [Operator -> ","] 
[Literal constant -> "descending"] [Operator -> ","] [Literal constant -> "explicit"] [Operator -> ","] [Literal constant -> "event"] [Operator -> ","] [Literal constant -> "extern"] [Operator -> ","] [Literal constant -> "else"] [Operator -> ","] [Literal constant -> "enum"] [Operator -> ","] 
[Literal constant -> "false"] [Operator -> ","] [Literal constant -> "finally"] [Operator -> ","] [Literal constant -> "fixed"] [Operator -> ","] [Literal constant -> "float"] [Operator -> ","] [Literal constant -> "for"] [Operator -> ","] [Literal constant -> "foreach"] [Operator -> ","] [Literal constant -> "from"] [Operator -> ","] 
[Literal constant -> "goto"] [Operator -> ","] [Literal constant -> "group"] [Operator -> ","] [Literal constant -> "if"] [Operator -> ","] [Literal constant -> "implicit"] [Operator -> ","] [Literal constant -> "in"] [Operator -> ","] [Literal constant -> "int"] [Operator -> ","] [Literal constant -> "interface"] [Operator -> ","] 
[Literal constant -> "internal"] [Operator -> ","] [Literal constant -> "into"] [Operator -> ","] [Literal constant -> "is"] [Operator -> ","] [Literal constant -> "lock"] [Operator -> ","] [Literal constant -> "long"] [Operator -> ","] [Literal constant -> "new"] [Operator -> ","] [Literal constant -> "null"] [Operator -> ","] [Literal constant -> "namespace"] [Operator -> ","] 
[Literal constant -> "object"] [Operator -> ","] [Literal constant -> "operator"] [Operator -> ","] [Literal constant -> "out"] [Operator -> ","] [Literal constant -> "override"] [Operator -> ","] [Literal constant -> "orderby"] [Operator -> ","] [Literal constant -> "params"] [Operator -> ","] 
[Literal constant -> "private"] [Operator -> ","] [Literal constant -> "protected"] [Operator -> ","] [Literal constant -> "public"] [Operator -> ","] [Literal constant -> "readonly"] [Operator -> ","] [Literal constant -> "ref"] [Operator -> ","] [Literal constant -> "return"] [Operator -> ","] 
[Literal constant -> "switch"] [Operator -> ","] [Literal constant -> "struct"] [Operator -> ","] [Literal constant -> "sbyte"] [Operator -> ","] [Literal constant -> "sealed"] [Operator -> ","] [Literal constant -> "short"] [Operator -> ","] [Literal constant -> "sizeof"] [Operator -> ","] 
[Literal constant -> "stackalloc"] [Operator -> ","] [Literal constant -> "static"] [Operator -> ","] [Literal constant -> "string"] [Operator -> ","] [Literal constant -> "select"] [Operator -> ","] [Literal constant -> "this"] [Operator -> ","] 
[Literal constant -> "throw"] [Operator -> ","] [Literal constant -> "true"] [Operator -> ","] [Literal constant -> "try"] [Operator -> ","] [Literal constant -> "typeof"] [Operator -> ","] [Literal constant -> "uint"] [Operator -> ","] [Literal constant -> "ulong"] [Operator -> ","] [Literal constant -> "unchecked"] [Operator -> ","] 
[Literal constant -> "unsafe"] [Operator -> ","] [Literal constant -> "ushort"] [Operator -> ","] [Literal constant -> "using"] [Operator -> ","] [Literal constant -> "var"] [Operator -> ","] [Literal constant -> "virtual"] [Operator -> ","] [Literal constant -> "volatile"] [Operator -> ","] 
[Literal constant -> "void"] [Operator -> ","] [Literal constant -> "while"] [Operator -> ","] [Literal constant -> "where"] [Operator -> ","] [Literal constant -> "yield"] [Delimiter -> "}"] [Delimiter -> ";"] 

[Keyword -> "string"] [Operator -> "[]"] [Identifier -> "separator"] [Operator -> "="] [Delimiter -> "{"] [Literal constant -> ";"] [Operator -> ","] [Literal constant -> "{"] [Operator -> ","] [Literal constant -> "}"] [Operator -> ","] [Literal constant -> "\r"] [Operator -> ","] [Literal constant -> "\n"] [Operator -> ","] [Literal constant -> "\r\n"] [Delimiter -> "}"] [Delimiter -> ";"] 

[Keyword -> "string"] [Operator -> "[]"] [Identifier -> "comments"] [Operator -> "="] [Delimiter -> "{"] [Literal constant -> "//"] [Operator -> ","] [Literal constant -> "/*"] [Operator -> ","] [Literal constant -> "*/"] [Delimiter -> "}"] [Delimiter -> ";"] 

[Keyword -> "string"] [Operator -> "[]"] [Identifier -> "operators"] [Operator -> "="] [Delimiter -> "{"] [Literal constant -> "+"] [Operator -> ","] [Literal constant -> "-"] [Operator -> ","] [Literal constant -> "*"] [Operator -> ","] [Literal constant -> "/"] [Operator -> ","] [Literal constant -> "%"] [Operator -> ","] [Literal constant -> "&"] [Operator -> ","] [Literal constant -> "("] [Operator -> ","] [Literal constant -> ")"] [Operator -> ","] [Literal constant -> "["] [Operator -> ","] [Literal constant -> "]"] [Operator -> ","] 
[Literal constant -> "|"] [Operator -> ","] [Literal constant -> "^"] [Operator -> ","] [Literal constant -> "!"] [Operator -> ","] [Literal constant -> "~"] [Operator -> ","] [Literal constant -> "&&"] [Operator -> ","] [Literal constant -> "||"] [Operator -> ","] [Literal constant -> ","] [Operator -> ","] 
[Literal constant -> "++"] [Operator -> ","] [Literal constant -> "--"] [Operator -> ","] [Literal constant -> "<<"] [Operator -> ","] [Literal constant -> ">>"] [Operator -> ","] [Literal constant -> "=="] [Operator -> ","] [Literal constant -> "!="] [Operator -> ","] [Literal constant -> "<"] [Operator -> ","] [Literal constant -> ">"] [Operator -> ","] [Literal constant -> "<="] [Operator -> ","] 
[Literal constant -> ">="] [Operator -> ","] [Literal constant -> "="] [Operator -> ","] [Literal constant -> "+="] [Operator -> ","] [Literal constant -> "-="] [Operator -> ","] [Literal constant -> "*="] [Operator -> ","] [Literal constant -> "/="] [Operator -> ","] [Literal constant -> "%="] [Operator -> ","] [Literal constant -> "&="] [Operator -> ","] [Literal constant -> "|="] [Operator -> ","] 
[Literal constant -> "^="] [Operator -> ","] [Literal constant -> "<<="] [Operator -> ","] [Literal constant -> ">>="] [Operator -> ","] [Literal constant -> "."] [Operator -> ","] [Literal constant -> "[]"] [Operator -> ","] [Literal constant -> "()"] [Operator -> ","] [Literal constant -> "?:"] [Operator -> ","] [Literal constant -> "=>"] [Operator -> ","] [Literal constant -> "??"] [Delimiter -> "}"] [Delimiter -> ";"] 
[Keyword -> "public"] [Keyword -> "string"] [Identifier -> "Parse"] [Operator -> "("] [Keyword -> "string"] [Identifier -> "item"] [Operator -> ")"] 
[Delimiter -> "{"] 

[Identifier -> "StringBuilder"] [Identifier -> "str"] [Operator -> "="] [Keyword -> "new"] [Identifier -> "StringBuilder"] [Operator -> "()"] [Delimiter -> ";"] 
[Keyword -> "int"] [Identifier -> "ok"] [Delimiter -> ";"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Int32"] [Operator -> "."] [Identifier -> "TryParse"] [Operator -> "("] [Identifier -> "item"] [Operator -> ","] [Keyword -> "out"] [Identifier -> "ok"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 

[Identifier -> "str"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(numerical constant, "] [Operator -> "+"] [Identifier -> "item"] [Operator -> "+"] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "str"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 

[Delimiter -> "}"] 



[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Equals"] [Operator -> "("] [Literal constant -> "\r\n"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "return"] [Literal constant -> "\r\n"] [Delimiter -> ";"] 

[Delimiter -> "}"] 

[Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckKeyword"] [Operator -> "("] [Identifier -> "item"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "true"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "str"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(keyword, "] [Operator -> "+"] [Identifier -> "item"] [Operator -> "+"] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "str"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "true"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "str"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(operator, "] [Operator -> "+"] [Identifier -> "item"] [Operator -> "+"] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "str"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Identifier -> "item"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "true"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "str"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(separator, "] [Operator -> "+"] [Identifier -> "item"] [Operator -> "+"] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "str"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Identifier -> "str"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(identifier, "] [Operator -> "+"] [Identifier -> "item"] [Operator -> "+"] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "str"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 



[Delimiter -> "}"] 


[Keyword -> "private"] [Keyword -> "bool"] [Identifier -> "CheckOperator"] [Operator -> "("] [Keyword -> "string"] [Identifier -> "str"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Array"] [Operator -> "."] [Identifier -> "IndexOf"] [Operator -> "("] [Identifier -> "operators"] [Operator -> ","] [Identifier -> "str"] [Operator -> ")"] [Operator -> ">"] [Numerical Constant -> "-1"] [Operator -> ")"] 
[Keyword -> "return"] [Keyword -> "true"] [Delimiter -> ";"] 
[Keyword -> "return"] [Keyword -> "false"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Keyword -> "private"] [Keyword -> "bool"] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Keyword -> "string"] [Identifier -> "str"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Array"] [Operator -> "."] [Identifier -> "IndexOf"] [Operator -> "("] [Identifier -> "separator"] [Operator -> ","] [Identifier -> "str"] [Operator -> ")"] [Operator -> ">"] [Numerical Constant -> "-1"] [Operator -> ")"] 
[Keyword -> "return"] [Keyword -> "true"] [Delimiter -> ";"] 
[Keyword -> "return"] [Keyword -> "false"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "private"] [Keyword -> "bool"] [Identifier -> "CheckKeyword"] [Operator -> "("] [Keyword -> "string"] [Identifier -> "str"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Array"] [Operator -> "."] [Identifier -> "IndexOf"] [Operator -> "("] [Identifier -> "keywords"] [Operator -> ","] [Identifier -> "str"] [Operator -> ")"] [Operator -> ">"] [Numerical Constant -> "-1"] [Operator -> ")"] 
[Keyword -> "return"] [Keyword -> "true"] [Delimiter -> ";"] 
[Keyword -> "return"] [Keyword -> "false"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "private"] [Keyword -> "bool"] [Identifier -> "CheckComments"] [Operator -> "("] [Keyword -> "string"] [Identifier -> "str"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Array"] [Operator -> "."] [Identifier -> "IndexOf"] [Operator -> "("] [Identifier -> "comments"] [Operator -> ","] [Identifier -> "str"] [Operator -> ")"] [Operator -> ">"] [Numerical Constant -> "-1"] [Operator -> ")"] 
[Keyword -> "return"] [Keyword -> "true"] [Delimiter -> ";"] 
[Keyword -> "return"] [Keyword -> "false"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Keyword -> "public"] [Keyword -> "string"] [Identifier -> "GetNextLexicalAtom"] [Operator -> "("] [Keyword -> "ref"] [Keyword -> "string"] [Identifier -> "item"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "StringBuilder"] [Identifier -> "token"] [Operator -> "="] [Keyword -> "new"] [Identifier -> "StringBuilder"] [Operator -> "()"] [Delimiter -> ";"] 
[Keyword -> "for"] [Operator -> "("] [Keyword -> "int"] [Identifier -> "i"] [Operator -> "="] [Numerical Constant -> "0"] [Delimiter -> ";"] [Identifier -> "i"] [Operator -> "<"] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Length"] [Delimiter -> ";"] [Identifier -> "i"] [Operator -> "++"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "<"] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Length"] [Operator -> "&&"] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] 
[Delimiter -> "{"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Delimiter -> "}"] 
[Keyword -> "else"] [Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "<"] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Length"] [Operator -> "&&"] [Operator -> "("] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> ")"] [Operator -> ")"] [Operator -> ")"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "2"] [Operator -> "<"] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Length"] [Operator -> "&&"] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "3"] [Operator -> ")"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "3"] [Operator -> ")"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "3"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] 
[Delimiter -> "{"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] [Keyword -> "if"] [Operator -> "("] [Identifier -> "CheckComments"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Equals"] [Operator -> "("] [Literal constant -> "//"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "do"] 
[Delimiter -> "{"] 
[Identifier -> "i"] [Operator -> "++"] [Delimiter -> ";"] 
[Delimiter -> "}"] [Keyword -> "while"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "!="] [Literal constant -> '\n'] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Trim"] [Operator -> "("] [Literal constant -> ' '] [Operator -> ","] [Literal constant -> '\t'] [Operator -> ","] [Literal constant -> '\r'] [Operator -> ","] [Literal constant -> '\n'] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "i"] [Operator -> "="] [Numerical Constant -> "-1"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] 
[Delimiter -> "{"] 
[Keyword -> "do"] 
[Delimiter -> "{"] 
[Identifier -> "i"] [Operator -> "++"] [Delimiter -> ";"] 
[Delimiter -> "}"] [Keyword -> "while"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "2"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Equals"] [Operator -> "("] [Literal constant -> "*/"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "false"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "2"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Trim"] [Operator -> "("] [Literal constant -> ' '] [Operator -> ","] [Literal constant -> '\t'] [Operator -> ","] [Literal constant -> '\r'] [Operator -> ","] [Literal constant -> '\n'] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "i"] [Operator -> "="] [Numerical Constant -> "-1"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Delimiter -> "}"] 
[Keyword -> "else"] 
[Delimiter -> "{"] 
[Keyword -> "int"] [Identifier -> "ok"] [Delimiter -> ";"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "=="] [Literal constant -> '-'] [Operator -> "&&"] [Identifier -> "Int32"] [Operator -> "."] [Identifier -> "TryParse"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ","] [Keyword -> "out"] [Identifier -> "ok"] [Operator -> ")"] [Operator -> ")"] 
[Keyword -> "continue"] [Delimiter -> ";"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Delimiter -> "}"] 
[Keyword -> "else"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "=="] [Literal constant -> '\''] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "int"] [Identifier -> "j"] [Operator -> "="] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Delimiter -> ";"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "j"] [Operator -> "]"] [Operator -> "=="] [Literal constant -> '\\'] [Operator -> ")"] 
[Identifier -> "j"] [Operator -> "+="] [Numerical Constant -> "2"] [Delimiter -> ";"] 
[Keyword -> "else"] 
[Identifier -> "j"] [Operator -> "++"] [Delimiter -> ";"] 

[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(literal constant, "] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Identifier -> "j"] [Operator -> "-"] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Identifier -> "j"] [Operator -> "-"] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "]"] [Operator -> "=="] [Literal constant -> '"'] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "int"] [Identifier -> "j"] [Operator -> "="] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Delimiter -> ";"] 
[Keyword -> "while"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "j"] [Operator -> "]"] [Operator -> "!="] [Literal constant -> '"'] [Operator -> ")"] 
[Identifier -> "j"] [Operator -> "++"] [Delimiter -> ";"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(literal constant, "] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Identifier -> "j"] [Operator -> "-"] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Identifier -> "i"] [Operator -> ","] [Identifier -> "j"] [Operator -> "-"] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Keyword -> "else"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> "."] [Identifier -> "Equals"] [Operator -> "("] [Literal constant -> " "] [Operator -> ")"] [Operator -> "||"] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "true"] [Operator -> "||"] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "true"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Contains"] [Operator -> "("] [Literal constant -> "numerical constant"] [Operator -> ")"] [Operator -> "&&"] [Identifier -> "item"] [Operator -> "["] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> "]"] [Operator -> "=="] [Literal constant -> '.'] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "int"] [Identifier -> "j"] [Operator -> "="] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "2"] [Delimiter -> ";"] 
[Keyword -> "while"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "j"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> "."] [Identifier -> "Equals"] [Operator -> "("] [Literal constant -> " "] [Operator -> ")"] [Operator -> "=="] [Keyword -> "false"] [Operator -> "&&"] [Identifier -> "CheckDelimiter"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "j"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "false"] [Operator -> "&&"] [Identifier -> "CheckOperator"] [Operator -> "("] [Identifier -> "item"] [Operator -> "["] [Identifier -> "j"] [Operator -> "]"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Operator -> "=="] [Keyword -> "false"] [Operator -> ")"] 
[Identifier -> "j"] [Operator -> "++"] [Delimiter -> ";"] 
[Keyword -> "int"] [Identifier -> "ok"] [Delimiter -> ";"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "Int32"] [Operator -> "."] [Identifier -> "TryParse"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "2"] [Operator -> ","] [Identifier -> "j"] [Operator -> "-"] [Identifier -> "i"] [Numerical Constant -> "-2"] [Operator -> ")"] [Operator -> ","] [Keyword -> "out"] [Identifier -> "ok"] [Operator -> ")"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> "(numerical constant, "] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "j"] [Operator -> ")"] [Operator -> ")"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Literal constant -> ") "] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "j"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Delimiter -> "}"] 
[Identifier -> "token"] [Operator -> "."] [Identifier -> "Append"] [Operator -> "("] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Substring"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Operator -> ")"] [Delimiter -> ";"] 
[Identifier -> "item"] [Operator -> "="] [Identifier -> "item"] [Operator -> "."] [Identifier -> "Remove"] [Operator -> "("] [Numerical Constant -> "0"] [Operator -> ","] [Identifier -> "i"] [Operator -> "+"] [Numerical Constant -> "1"] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "return"] [Identifier -> "Parse"] [Operator -> "("] [Identifier -> "token"] [Operator -> "."] [Identifier -> "ToString"] [Operator -> "()"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 


[Delimiter -> "}"] 
[Keyword -> "return"] [Keyword -> "null"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Delimiter -> "}"] 
[Delimiter -> "}"] 