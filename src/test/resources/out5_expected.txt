[Keyword -> "using"] [Identifier -> "System"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Collections"] [Operator -> "."] [Identifier -> "Generic"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Linq"] [Delimiter -> ";"] 
[Keyword -> "using"] [Identifier -> "System"] [Operator -> "."] [Identifier -> "Text"] [Delimiter -> ";"] 
[Keyword -> "namespace"] [Identifier -> "PrimeNumber"] 
[Delimiter -> "{"] 
[Keyword -> "class"] [Identifier -> "Program"] 
[Delimiter -> "{"] 
[Keyword -> "static"] [Keyword -> "void"] [Identifier -> "Main"] [Operator -> "("] [Keyword -> "string"] [Operator -> "[]"] [Identifier -> "args"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "bool"] [Identifier -> "isPrime"] [Operator -> "="] [Keyword -> "true"] [Delimiter -> ";"] 
[Identifier -> "Console"] [Operator -> "."] [Identifier -> "WriteLine"] [Operator -> "("] [Literal constant -> "Prime Numbers : "] [Operator -> ")"] [Delimiter -> ";"] 
[Keyword -> "for"] [Operator -> "("] [Keyword -> "int"] [Identifier -> "i"] [Operator -> "="] [Numerical constant -> "2"] [Delimiter -> ";"] [Identifier -> "i"] [Operator -> "<="] [Numerical constant -> "100"] [Delimiter -> ";"] [Identifier -> "i"] [Operator -> "++"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Keyword -> "for"] [Operator -> "("] [Keyword -> "int"] [Identifier -> "j"] [Operator -> "="] [Numerical constant -> "2"] [Delimiter -> ";"] [Identifier -> "j"] [Operator -> "<="] [Numerical constant -> "100"] [Delimiter -> ";"] [Identifier -> "j"] [Operator -> "++"] [Operator -> ")"] 
[Delimiter -> "{"] 

[Keyword -> "if"] [Operator -> "("] [Identifier -> "i"] [Operator -> "!="] [Identifier -> "j"] [Operator -> "&&"] [Identifier -> "i"] [Operator -> "%"] [Identifier -> "j"] [Operator -> "=="] [Numerical constant -> "0"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "isPrime"] [Operator -> "="] [Keyword -> "false"] [Delimiter -> ";"] 
[Keyword -> "break"] [Delimiter -> ";"] 
[Delimiter -> "}"] 

[Delimiter -> "}"] 
[Keyword -> "if"] [Operator -> "("] [Identifier -> "isPrime"] [Operator -> ")"] 
[Delimiter -> "{"] 
[Identifier -> "Console"] [Operator -> "."] [Identifier -> "Write"] [Operator -> "("] [Literal constant -> "\t"] [Operator -> "+"] [Identifier -> "i"] [Operator -> ")"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Identifier -> "isPrime"] [Operator -> "="] [Keyword -> "true"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Identifier -> "Console"] [Operator -> "."] [Identifier -> "ReadKey"] [Operator -> "()"] [Delimiter -> ";"] 
[Delimiter -> "}"] 
[Delimiter -> "}"] 
[Delimiter -> "}"] 